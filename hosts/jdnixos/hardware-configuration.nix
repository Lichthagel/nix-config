# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" "sr_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];
  boot.supportedFilesystems = ["ntfs"];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/d2144a34-ef9f-4969-baf6-efc62c7a0818";
    fsType = "btrfs";
    options = ["subvol=@"];
  };

  boot.initrd.luks.devices."luks-aef8453d-65b8-4ade-bd05-948bfcd87b57".device = "/dev/disk/by-uuid/aef8453d-65b8-4ade-bd05-948bfcd87b57";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/1475-F6A1";
    fsType = "vfat";
  };

  fileSystems."/mnt/d" = {
    device = "/dev/disk/by-uuid/62EE524EEE521A9D";
    fsType = "ntfs-3g";
    options = ["rw" "uid=1000" "gid=1000" "umask=022" "fmask=133" "dmask=022" "prealloc" "windows_names"];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
